{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\QB781BB\\\\OneDrive - EY\\\\Documents\\\\Personal\\\\Proyectos\\\\App 1\\\\Frontend 2\\\\routine-app\\\\src\\\\components\\\\carruselExercisePage\\\\carruselExercise.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Slider from 'react-slick'; // Importa Slider de react-slick\nimport './CarouselExercise.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExerciseCarousel = ({\n  onSelectExercise\n}) => {\n  _s();\n  const [exercises, setExercises] = useState([]); // Estado para almacenar los ejercicios\n  const [error, setError] = useState(null); // Estado para manejar errores\n\n  // Cargar ejercicios al montar el componente\n  useEffect(() => {\n    const fetchExercises = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/api/exercise');\n        setExercises(response.data.docs); // Asigna los ejercicios al estado\n      } catch (error) {\n        console.error('Error al obtener los ejercicios:', error);\n        setError('No se pudieron cargar los ejercicios');\n      }\n    };\n    fetchExercises(); // Llama a la función para cargar ejercicios\n  }, []); // Este hook solo se ejecuta una vez al montar el componente\n\n  // Verifica si el array de ejercicios está vacío y muestra el mensaje correspondiente\n  if (exercises.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay ejercicios disponibles.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Configuración del slider\n  const settings = {\n    dots: true,\n    // Muestra puntos de navegación\n    infinite: true,\n    // Hacer que el carrousel sea infinito\n    speed: 500,\n    // Velocidad de transición\n    slidesToShow: 1,\n    // Mostrar 1 ejercicio a la vez\n    slidesToScroll: 1 // Desplazar 1 ejercicio por vez\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      ...settings,\n      children: exercises.map(exercise => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: exercise.name || 'Ejercicio no disponible'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Series: \", exercise.serie || 'No disponible']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Repeticiones: \", exercise.repetition || 'No disponible']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Peso: \", exercise.weight || 'No disponible', \" kg\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-primary\",\n          onClick: () => onSelectExercise(exercise._id),\n          children: \"A\\xF1adir a d\\xEDa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, exercise._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ExerciseCarousel, \"2pZf0znixoVy4i4FIP++t4K1zl8=\");\n_c = ExerciseCarousel;\nexport default ExerciseCarousel;\nvar _c;\n$RefreshReg$(_c, \"ExerciseCarousel\");","map":{"version":3,"names":["React","useState","useEffect","axios","Slider","jsxDEV","_jsxDEV","ExerciseCarousel","onSelectExercise","_s","exercises","setExercises","error","setError","fetchExercises","response","get","data","docs","console","length","children","fileName","_jsxFileName","lineNumber","columnNumber","settings","dots","infinite","speed","slidesToShow","slidesToScroll","style","color","map","exercise","className","name","serie","repetition","weight","onClick","_id","_c","$RefreshReg$"],"sources":["C:/Users/QB781BB/OneDrive - EY/Documents/Personal/Proyectos/App 1/Frontend 2/routine-app/src/components/carruselExercisePage/carruselExercise.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Slider from 'react-slick'; // Importa Slider de react-slick\r\nimport './CarouselExercise.css';\r\n\r\nconst ExerciseCarousel = ({ onSelectExercise }) => {\r\n  const [exercises, setExercises] = useState([]); // Estado para almacenar los ejercicios\r\n  const [error, setError] = useState(null); // Estado para manejar errores\r\n\r\n  // Cargar ejercicios al montar el componente\r\n  useEffect(() => {\r\n    const fetchExercises = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/api/exercise');\r\n        setExercises(response.data.docs); // Asigna los ejercicios al estado\r\n      } catch (error) {\r\n        console.error('Error al obtener los ejercicios:', error);\r\n        setError('No se pudieron cargar los ejercicios');\r\n      }\r\n    };\r\n    fetchExercises(); // Llama a la función para cargar ejercicios\r\n  }, []); // Este hook solo se ejecuta una vez al montar el componente\r\n\r\n  // Verifica si el array de ejercicios está vacío y muestra el mensaje correspondiente\r\n  if (exercises.length === 0) {\r\n    return <p>No hay ejercicios disponibles.</p>;\r\n  }\r\n\r\n  // Configuración del slider\r\n  const settings = {\r\n    dots: true, // Muestra puntos de navegación\r\n    infinite: true, // Hacer que el carrousel sea infinito\r\n    speed: 500, // Velocidad de transición\r\n    slidesToShow: 1, // Mostrar 1 ejercicio a la vez\r\n    slidesToScroll: 1, // Desplazar 1 ejercicio por vez\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      {/* Carrousel con Slider */}\r\n      <Slider {...settings}>\r\n        {exercises.map((exercise) => (\r\n          <div key={exercise._id} className=\"exercise-card\">\r\n            <h3>{exercise.name || 'Ejercicio no disponible'}</h3>\r\n            <div>\r\n              <p>Series: {exercise.serie || 'No disponible'}</p>\r\n              <p>Repeticiones: {exercise.repetition || 'No disponible'}</p>\r\n              <p>Peso: {exercise.weight || 'No disponible'} kg</p>\r\n            </div>\r\n            <button className=\"btn btn-outline-primary\" onClick={() => onSelectExercise(exercise._id)}>Añadir a día</button>\r\n          </div>\r\n        ))}\r\n      </Slider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciseCarousel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}